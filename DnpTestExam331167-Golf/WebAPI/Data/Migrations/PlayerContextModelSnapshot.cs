// <auto-generated />
using EfcDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfcDataAccess.Migrations
{
    [DbContext(typeof(GolfContext))]
    partial class PlayerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Shared.Models.HoleScore", b =>
                {
                    b.Property<int>("HoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumberOfStrikes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerPhone")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoundId")
                        .HasColumnType("INTEGER");

                    b.HasKey("HoleId");

                    b.HasIndex("PlayerPhone");

                    b.ToTable("HoleScores");
                });

            modelBuilder.Entity("Shared.Models.Player", b =>
                {
                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MembershipFee")
                        .HasColumnType("REAL");

                    b.Property<string>("MembershipType")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Phone");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Shared.Models.HoleScore", b =>
                {
                    b.HasOne("Shared.Models.Player", null)
                        .WithMany("HoleScores")
                        .HasForeignKey("PlayerPhone");
                });

            modelBuilder.Entity("Shared.Models.Player", b =>
                {
                    b.Navigation("HoleScores");
                });
#pragma warning restore 612, 618
        }
    }
}
