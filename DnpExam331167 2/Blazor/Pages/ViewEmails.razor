@page "/ViewEmails"
@using Blazor.Data
@using Blazor.Services
@inject IEmailService EmailService;

<div class="filter-bar">
    <div class="filters-container">
        <img src="icons/@(_doShowFilters ? "clear_" : "")funnel.png" class="funnel" @onclick="@(() => _doShowFilters = ! _doShowFilters)" alt="Funnel"/>
        @if (_doShowFilters)
        {
            <div class="filter">
                <label>Sender:</label>
                <input type="text" @bind="_sender"/>
            </div>
            <div class="filter">
                <label>Title:</label>
                <input type="number" @bind="_title"/>
            </div>
        }
    </div>
</div>

<div>
	<button @onclick="LoadEmails">Load</button>
</div>

@if (_emails == null)
{
}
else if (!_emails.Any())
	{
		<p>No emails to display</p>
	}
else{

	<table class="table">
		<thead>
		<tr>
			<th>Receiver</th>
			<th>Title</th>
			<th>Body</th>
			<th>Timestamp</th>
			<th>Sender</th>
		</tr>
		</thead>
		<tbody>
		@foreach (var email in _emails)
		{
			<tr>
				<td>@email.Receiver</td>
				<td>@email.Title</td>
				<td>@email.Body</td>
				<td>@email.Date</td>
				<td>@email.Sender</td>
			</tr>
		}
		</tbody>
	</table>
}

@if (!string.IsNullOrEmpty(_msg))
{
    <label style="color: red">@_msg</label>
}

@code {
	private IEnumerable<Email>? _emails;
	private string _msg = "";
	private bool _doShowFilters = false;

	private string _sender;
	private int _title;
	private string _titleContainsFilter;

	private void LoadEmails()
	{
		try
		{
			EmailService.GetAllEmails();
		}
		catch (Exception e)
		{
			Console.WriteLine(e);
			_msg = e.Message;
		}
	}
}
